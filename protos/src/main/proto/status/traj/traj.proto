syntax = "proto3";

package linuxcnc.status;

import "proto/status/position.proto";

option java_package = "ro.dragossusi.proto.linuxcnc.status";
option java_multiple_files = true;

/** Types for motion control */
enum TrajectoryMode {
  /** Independent-axis motion.*/
  FREE = 0;
  /** Coordinated-axis motion.*/
  COORD = 1;
  /** Velocity based world coordinates motion. */
  TELEOP = 2;
};

message TrajectoryStatus {

  /** Units per mm*/
  double linear_units = 1;
  /** Units per degree*/
  double angular_units = 2;
  /** Cycle time, in seconds*/
  double cycle_time = 3;
  /** Maximum joint number*/
  int32 joints = 4;
  /** Maximum spindle number*/
  int32 spindles = 5;
  /** Mask of axes actually present*/
  int32 axis_mask = 6;
  TrajectoryMode mode = 7;
  bool enabled = 8;

  bool in_position = 9;

  /** Number of pending motions, counting*/
  int32 queue = 10;

  // current
  int32 active_queue = 11;  // number of motions blending
  bool queue_full = 12;     // non-zero means can't accept another motion
  int32 id = 13;           // id of the currently executing motion
  bool paused = 14;        // non-zero means motion paused
  double scale = 15;       // velocity scale factor
  double rapid_scale = 16; // rapid scale factor
  // double spindle_scale;	// moved to EMC_SPINDLE_STAT

  Position position = 17;       // current commanded position
  Position actual_position = 18; // current actual position, from forward kins
  double velocity = 19;         // system velocity, for subsequent motions
  double acceleration = 20;     // system acceleration, for subsequent
  // motions
  double max_velocity = 21;     // max system velocity
  double max_acceleration = 22; // system acceleration

  Position probed_position = 23; // last position where probe was tripped.
  bool probe_tripped = 24;      // Has the probe been tripped since the last
  // clear.
  bool probing = 25; // Are we currently looking for a probe
  // signal.
  int32 probeval = 26;        // Current value of probe input.
  int32 kinematics_type = 27; // identity=1,serial=2,parallel=3,custom=4
  int32 motion_type = 28;
  double distance_to_go = 29; // in current move
  Position dtg = 30;
  double current_vel = 31; // in current move
  bool feed_override_enabled = 32;
  // bool spindle_override_enabled; moved to SPINDLE_STAT
  bool adaptive_feed_enabled = 33;
  bool feed_hold_enabled = 34;
}